
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <!--Edit the title of the page-->
    <title>Your page title goes here</title>
    <meta name="description" content="">
    <meta name="author" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <link rel="stylesheet" href="http://libs.cartocdn.com/cartodb.js/v3/themes/css/cartodb.css" />
    <!--[if lte IE 8]>
      <link rel="stylesheet" href="http://libs.cartocdn.com/cartodb.js/v3/themes/css/cartodb.ie.css" />
    <![endif]-->
    <!--Switch between the different themes changing the stylesheet below - light-theme.css |dark-theme.css -->
    <link rel="stylesheet" href="css/light-theme.css">
    <link rel="stylesheet" href="css/makeitresponsive.css">
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.2/jquery.min.js"></script>

  <!-- 
    Load Leaflet. Pretty standard.
  -->
  <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
  <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
  
  <!-- 
    Load moment.js. This makes formatting dates easier:
      http://momentjs.com/
  -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.12.0/moment.min.js"></script>
  
  <!-- 
    Load Leaflet.timeline. This is a Leaflet plugin that will make it possible
    to show time-based data with a slider.
      https://github.com/skeate/Leaflet.timeline
  -->
  <script src="https://cdn.rawgit.com/skeate/Leaflet.timeline/master/dist/leaflet.timeline.min.js"></script>
  <link rel="stylesheet" href="https://cdn.rawgit.com/skeate/Leaflet.timeline/master/dist/leaflet.timeline.min.css"/>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>JS Bin</title>
  
    <script>
    var map;
    var timeline;
    var tractsTimeline;
        
    function getSchoolsStyle(data) {
      // Get the value from the census tract for
      // whatever is selected in the dropdown
      var pctValue = data.properties[$('.category').val()];
 
      var catName = $('.category').val();

      var fillOpacity;
      if (pctValue == undefined) {
        fillOpacity == 0;
      }
      console.log(catName);
      var fillHue; 
      if (catName == 'utilpct') {
        fillHue = 0;
      }
      if (catName == 'enrpctafm') {
        fillHue = 150;
      }
       if (catName == 'enrpctasi') {
        fillHue = 200;
      }
       if (catName == 'enrpcthis') {
        fillHue = 250;
      }
       if (catName == 'enrpctwht') {
        fillHue = 300;
      }
       if (catName == 'enrpctpov') {
        fillHue = 350;
      } 
       if (catName == 'ccdenrpctfrl') {
        fillHue = 350;
      }
      // Varying lightness by whatever is selected in
      // the dropdown
      
      var fillColor = 'hsl(' + fillHue + ', 66%, ' + (((1 - pctValue) * 80) + 10) + '%)';
      if (pctValue == undefined) {
        fillColor = 'hsl(0, 0%, 70%)';
      }
      // Varying point radii by enrnumtot

      var radius = 10;
        radius = data.properties.enrnumtot / 70;

      return {
        radius: radius,
        stroke: true,
        color: "#fff",
        weight: 1,
        fillColor: fillColor,
        fillOpacity: fillOpacity
      };
    }

    $(document).ready(function () {
      
      /*
       * Create the map
       */
      map = L.map('map').setView([40.681503, -73.931500], 14);

      /*
       * Add base tiles from Mapbox. Replace "ebrelsford.ho06j5h0" with
       * the id from your Mapbox map to use those tiles instead.
       */
      L.tileLayer('https://{s}.tiles.mapbox.com/v3/ebrelsford.ho06j5h0/{z}/{x}/{y}.png', {
        maxZoom: 18,
        attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery &copy; <a href="http://mapbox.com">Mapbox</a>'
      }).addTo(map);

      /*
       * Create our time slider. We give it a format for the dates that it
       * will display underneath it. 'YYYY-MM-DD' means "year-month-day". If
       * you want to customize this see the moment.js documentation:
       *   http://momentjs.com/docs/#/displaying/
       */
      var slider = L.timelineSliderControl({
        formatOutput: function(date){
          return moment(date).format("YYYY");
        }
      });
      map.addControl(slider);

      /*
       * Select our data from CartoDB. I'll reformat it here for clarity:
       *   SELECT *, date AS start, date + interval '1 days' AS end 
       *   FROM nypd_motor_vehicle_collisions_june_2015
       *   WHERE the_geom IS NOT NULL AND borough = ''
       *
       * This is selecting crashes (nypd_motor_vehicle_collisions_june_2015) where
       * the borough is empty. It is selecting all of the columns (*) and adding two
       * new columns:
       *  - The first is called 'start'. This is the date of the crash. You need
       *    a column named 'start' for Leaflet.timeline to work.
       *  - The second is called 'end'. This is when we want the crash to disappear
       *    from the map. We're adding 1 day(s) to the crashes so they stick around
       *    for a while. If you have a real end date you would probably want to use
       *    that.
       */
       var sql = "SELECT *, year_date AS start, year_end AS end FROM d16_data_0401_merge WHERE the_geom IS NOT NULL";
      var url = 'http://maxfreedman.cartodb.com/api/v1/sql?' + $.param({
        format: 'geojson',
        q: sql
      });  
      
      var tractsSql = "SELECT *, year_date AS start, year_end AS end FROM ngis_d16tracts_7012_merge WHERE the_geom IS NOT NULL";
      var tractsUrl = 'http://maxfreedman.cartodb.com/api/v1/sql?' + $.param({
        format: 'geojson',
        q: tractsSql
      });
      /*
       * Actually get the data from CartoDB now that we have an SQL statement that works.
       */
      $.getJSON(url, function (data) {
        $.getJSON(tractsUrl, function (tractsData) {
        
          /*
           * Once the data loads, create an L.timeline. This replaces L.geoJson.
           */
          timeline = L.timeline(data, {
            onEachFeature: function (feature, layer) {
              layer.bindPopup(feature.properties.dbn);
            },

            pointToLayer: function(data, latlng) {
              return L.circleMarker(latlng);
            },
            
            style: function (feature) {
              return getSchoolsStyle(feature);
            }
          });
          tractsTimeline = L.timeline(tractsData, {
            onEachFeature: function (feature, layer) {
              layer.bindPopup(feature.properties.name);
            },

            style: function(feature) {
              return getTractsStyle(feature);
            }
          });
          
          tractsTimeline.addTo(map);
          timeline.addTo(map);
          slider.addTimelines(timeline);

        });
      });
                  $.getJSON('http://maxfreedman.cartodb.com/api/v1/sql?q=SELECT * FROM district_borders&format=GeoJSON')
  
    // When it's done, add the results to the map
    .done(function (data) {
      L.geoJson(data, {
         style: function (feature) {
          var style = {
            fillOpacity: 0,
            stroke: true,
            color: '#000',
            weight: 2
          }
      return style;
        }
      }).addTo(map);   
   
 });
      $('.category').change(function () {
        // When the dropdown changes, set the style on each
        // census tract using our getTractsStyle function
        timeline.eachLayer(function (layer) {
          var feature = layer.feature;
          layer.setStyle(getSchoolsStyle(feature));
        });
      });
    });
  </script>
<style>
          .leaflet-left {
      width: 100%;
    }
    
    .category {
      position: absolute;
      right: 435px;
      top: 15px;
      z-index: 5000;
    }
</style>
  </head>
  <body>

    <div class="map" id="map"></div>
 <select class="category">
    <option value="enrpctafm">% african american</option>
    <option value="enrpctasi">% asian</option>
    <option value="enrpcthis">% hispanic</option>
    <option value="enrpctwht">% white</option>
    <option value="enrpctpov">% poverty</option>
    <option value="ccdenrpctfrl">% FRPL</option>
  </select>
    <div class="sidepanel">
      <div class="wrapper">
        <div class="context subheader">
          <p>Map created by <a href="#">{Link to your website}</a></p>
        </div>
        <h1>Title of your visualization</h1>
        <p>An earthquake of magnitude 9.0 occurred March 11, 2012, off the northeastern Pacific coast of Japan. The earthquake was followed by a tsunami which would reach 9.3m or higher at Fukushima Prefecture. <a href=''>Combined, the two claimed almost</a> 20,000 lives in the region of Tohoku and triggered nuclear meltdowns at three reactors in Fukushima nuclear plant.</p>

        <!--Copy and paste the div below for creating content blocks-->
        <h3>Description</h3>
        <p>The size and age of the Cosmos are beyond ordinary human understanding. Lost somewhere between immensity and eternity is our tiny planetary home. In a cosmic perspective, most human concerns seem insignificant, even petty. And yet our species is young and curious and brave and shows much promise. In the last few millennia we have made the most astonishing, unexpected discoveries about the Cosmos and our place within it, explorations that are exhilarating to consider. They remind us that humans have evolved to wonder, that understanding is a joy, that knowledge is prerequisite to survival. I believe our future depends powerfully on how well we understand this Cosmos in which we float like a mote of dust in the morning sky.</p>

        <h3>Sources</h3>
        <p>Unexpected discoveries about the <a href="#">Cosmos and our place</a> within it, explorations that are <a href="#">exhilarating</a> to consider. They remind us that humans have evolved to wonder, that understanding is a joy, that knowledge is prerequisite to survival. I believe our future depends powerfully on how well we understand this.</p>

        <div class="context footer">
          <p>Create your maps with ease using <a href="http://cartodb.com">CartoDB</a></p></p>
        </div>
      </div>
    </div>

  </body>
      </html>
